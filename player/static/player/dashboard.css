body {
    position: relative;

    /* This makes the body element take up the full height of the viewport (the visible part of the web page). */
    height: 100vh;
    
    /* This makes the body element take up the full width of the viewport. */
    width: 100vw;
    
    /* Hides any overflow content both vertically (overflow-y) and horizontally (overflow-x). This prevents scrollbars from appearing if the content exceeds the size of the viewport. */
    overflow: hidden;

    display: flex;
    flex-direction: column;

    /* Center horizontally */
    justify-content: center;

    /* Center vertically */
    align-items: center;
}

/* 
This method creates a semi-transparent overlay on top of the background image using a pseudo-element. 
The ::before pseudo-element creates a full-screen layer that contains the background image.
*/
body::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: url("/static/player/images/background.jpg");
    
    /* Stretches the background image to cover 100% of both the width and height of the body. This makes the image fill the entire screen. */
    background-size: 100% 100%;

    /* Ensures that the background image does not repeat itself. */
    background-repeat: no-repeat;

    /* Change this value to adjust the opacity */
    opacity: 0.5; 

    /* Ensure it's behind the content */
    z-index: -1;  
}

.heading {
    /* Text */
    color: #222; /* darker color for better contrast */
    font-size: 2rem;
    font-weight: bold;

    /* Center horizontally */
    justify-content: center;

    /* Paddings */
    /* padding-top: 20px; */
    padding-bottom: 20px;
}

.box {
    /* When you set display: flex; on the <body> (or any other container element), the direct child elements (such as <div> tags) will by default be placed horizontally, one next to the other. This happens because the default value for the flex-direction property is row. */
    display: flex;

    /* If you want the divs to be stacked vertically instead of horizontally, you can change the flex-direction to column. */
    flex-direction: row;
    /* background-color: rgba(255, 255, 255, 0.50); Slightly transparent background */
    
    /* Box width */
    width: 1500px;

    /* Box height */
    height: 500px;

    /* Box border */
    /* border: 2px solid #000; */
    /* border-radius: 20px; Softer corners */
    /* padding: 30px; More space inside the box */

    /* Center vertically */
    /* align-items: center; */
}

.platformer-game {
    width: 400px;
    height: 500px;
    background-color: rgba(230, 212, 248, 0.6);
    display: flex;
    flex-direction: column;
    align-items: center;
}
.platformer-game-icon {
    width: 180px;
    height: 180px;
    margin-top: 60px;
    border-radius: 100%;
    background-image: url("/static/player/images/platformer-background.png");
    background-size: 100% 100%;
}
.platformer-game-title {
    font-size: 1.5rem;
    font-weight: bolder;
    color: white;
    margin-top: 20px;
}